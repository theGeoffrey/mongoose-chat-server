#!/bin/bash
set -e

readonly HOSTNAME=$(hostname -f)

readonly MONGOOSEIMCTL="${MONGOOSE_ROOT}/bin/mongooseim"
readonly CONFIGFILE="${MONGOOSE_ROOT}/etc/ejabberd.cfg"
readonly CONFIGTEMPLATE="${MONGOOSE_ROOT}/etc/ejabberd.cfg.tpl"
readonly LOGDIR="${MONGOOSE_ROOT}/var/log"

readonly PYTHON_JINJA2="import os;
import sys;
import jinja2;
sys.stdout.write(
    jinja2.Template
        (sys.stdin.read()
    ).render(env=os.environ))"

_trap() {
    echo "Stopping mongooseim..."
    if ctl stop ; then
        local cnt=0
        sleep 1
        while ctl status || test $? = 1 ; do
            cnt=`expr $cnt + 1`
            if [ $cnt -ge 60 ] ; then
                break
            fi
            sleep 1
        done
    fi
}


## setup

echo "Generating mongooseim config file..."
cat ${CONFIGTEMPLATE} \
  | python -c "${PYTHON_JINJA2}" \
  > ${CONFIGFILE}


# Catch signals and shutdown mongooseim
# trap _trap SIGTERM SIGINT


## run mongooseim
case "$@" in
    start)
        # tail -F ${LOGDIR}/ejabberd.log &
        echo "Starting mongooseim..."
        exec ${MONGOOSEIMCTL} "start"
        child=$!
        echo "post process"
        sleep 1m
        echo "post sleep"
        PID=`ps ax -o pid= -o command=|\
                    grep "$MONGOOSE_ROOT/.*/[b]eam"|awk '{print $1}'`
        echo "wait $CHILD $PID"
        wait $child
        echo "ending"
    ;;
    live)
        echo "Starting mongooseim in 'live' mode..."
        exec ${MONGOOSEIMCTL} "live"
    ;;
esac
